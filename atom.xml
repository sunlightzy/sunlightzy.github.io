<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jerry Simple</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.milk4j.com/"/>
  <updated>2018-10-24T09:53:47.517Z</updated>
  <id>https://blog.milk4j.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker安装nginx</title>
    <link href="https://blog.milk4j.com/2018/10/22/Docker%E5%AE%89%E8%A3%85nginx/"/>
    <id>https://blog.milk4j.com/2018/10/22/Docker安装nginx/</id>
    <published>2018-10-22T04:34:08.000Z</published>
    <updated>2018-10-24T09:53:47.517Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方式一：通过-pull-仓库镜像"><a href="#方式一：通过-pull-仓库镜像" class="headerlink" title="方式一：通过  pull 仓库镜像"></a>方式一：通过  pull 仓库镜像</h3><h4 id="一、下载镜像"><a href="#一、下载镜像" class="headerlink" title="一、下载镜像"></a>一、下载镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><h4 id="二、使用镜像创建容器"><a href="#二、使用镜像创建容器" class="headerlink" title="二、使用镜像创建容器"></a>二、使用镜像创建容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">mkdir -p ~/nginx/www ~/nginx/logs ~/nginx/conf</span><br><span class="line"><span class="meta">#</span><span class="bash">www目录将映射为nginx容器配置的虚拟目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash">logs目录将映射为nginx容器的日志目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash">conf目录里的配置文件将映射为nginx容器的配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">找一份默认的 nginx.conf 配置文件放在 conf 目录下,否则下面启动会报错</span></span><br><span class="line">docker run -p 80:80 --name web -v $PWD/www:/www -v  $PWD/logs:/wwwlogs -d nginx</span><br><span class="line">docker cp web:/etc/nginx/nginx.conf </span><br><span class="line"><span class="meta">#</span><span class="bash">删除容器后再运行下面的命令</span></span><br><span class="line">docker run -p 80:80 --name web --link=app1:app1 --link=app2:app2 --link=app3:app3 -v $PWD/www:/www -v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf -v $PWD/conf/servers:/etc/nginx/conf.d -v $PWD/logs:/wwwlogs -d nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">此时打开浏览器访问宿主机的 IP 就可看到 nginx 的界面了，安装启动成功</span></span><br><span class="line"><span class="meta">#</span><span class="bash">-d:让容器在后台运行。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">-P:将容器内部使用的网络端口映射到我们使用的主机上。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">使用命令进入交互式终端</span></span><br><span class="line">docker exec -it mynginx /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看 IP</span></span><br><span class="line">ifconfig</span><br><span class="line"><span class="meta">#</span><span class="bash">发现找不到指令，需要安装 net-tools 工具依次执行，再执行 ifconfig</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install net-tools</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">在宿主机中查询容器的 IP，返回 json 串，里面包含了详细的容器信息，包括 IP ~</span></span><br><span class="line"><span class="meta">#</span><span class="bash">docker inspect [容器名|id]</span></span><br><span class="line">docker inspect mynginx</span><br></pre></td></tr></table></figure><p>命令说明：</p><ul><li>-p 80:80：将容器的80端口映射到主机的80端口</li><li>–name  web：将容器命名为web</li><li>-v $PWD/www:/www：将主机中当前目录下的www挂载到容器的/www</li><li>-v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf：将主机中当前目录下的nginx.conf挂载到容器的/etc/nginx/nginx.conf</li><li>-v $PWD/logs:/wwwlogs：将主机中当前目录下的logs挂载到容器的/wwwlogs</li></ul><h3 id="方式二：通过-Dockerfile构建"><a href="#方式二：通过-Dockerfile构建" class="headerlink" title="方式二：通过 Dockerfile构建"></a>方式二：通过 Dockerfile构建</h3><h5 id="构建准备工作"><a href="#构建准备工作" class="headerlink" title="构建准备工作"></a>构建准备工作</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/nginx/www ~/nginx/logs ~/nginx/conf</span><br><span class="line">cd ~/nginx</span><br><span class="line">vi Dockerfile</span><br></pre></td></tr></table></figure><h5 id="在-Dockerfile-中输入如下内容："><a href="#在-Dockerfile-中输入如下内容：" class="headerlink" title="在 Dockerfile 中输入如下内容："></a>在 Dockerfile 中输入如下内容：</h5><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#指定使用那个基础镜像</span><br><span class="line">FROM centos</span><br><span class="line">MAINTAINER ginkgo</span><br><span class="line">LABEL Discription="基于centos的nginx镜像" version="1.0"</span><br><span class="line">WORKDIR /usr/local/src</span><br><span class="line">RUN yum install -y wget</span><br><span class="line">RUN wget http://nginx.org/download/nginx-1.8.0.tar.gz</span><br><span class="line">RUN tar -zxvf nginx-1.8.0.tar.gz</span><br><span class="line">WORKDIR nginx-1.8.0</span><br><span class="line">#安装nginx所依赖的包</span><br><span class="line">RUN yum -y install gcc-c++</span><br><span class="line">RUN yum -y install pcre pcre-devel</span><br><span class="line">RUN yum -y install zlib zlib-devel</span><br><span class="line">RUN yum -y install openssl openssl-devel libssl-dev</span><br><span class="line">RUN ./configure</span><br><span class="line">RUN make</span><br><span class="line">RUN make install</span><br><span class="line">EXPOSE 80</span><br></pre></td></tr></table></figure><h5 id="通过Dockerfile-构建一个镜像"><a href="#通过Dockerfile-构建一个镜像" class="headerlink" title="通过Dockerfile 构建一个镜像"></a>通过Dockerfile 构建一个镜像</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -t 镜像名 , <span class="string">"."</span> 是Dockerfile 所在的目录，可以使用绝对路径</span></span><br><span class="line">docker build -t ginkgo/nginx .</span><br><span class="line"><span class="meta">#</span><span class="bash">查看镜像</span></span><br><span class="line">docker images</span><br></pre></td></tr></table></figure><h5 id="构建-运行容器"><a href="#构建-运行容器" class="headerlink" title="构建|运行容器"></a>构建|运行容器</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">找一份默认的 nginx.conf 配置文件放在 ~/nginx/conf 目录下,否则下面启动会报错</span></span><br><span class="line">docker run -p 80:80 --name mynginx -v $PWD/www:/www -v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf -v $PWD/logs:/wwwlogs -d nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">此时打开浏览器访问宿主机的 IP 就可看到 nginx 的界面了，安装启动成功</span></span><br><span class="line"><span class="meta">#</span><span class="bash">-d:让容器在后台运行。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">-P:将容器内部使用的网络端口映射到我们使用的主机上。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">使用命令进入交互式终端</span></span><br><span class="line">docker exec -it mynginx /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看 IP</span></span><br><span class="line">ifconfig</span><br><span class="line"><span class="meta">#</span><span class="bash">发现找不到指令，需要安装 net-tools 工具依次执行，再执行 ifconfig</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install net-tools</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">在宿主机中查询容器的 IP，返回 json 串，里面包含了详细的容器信息，包括 IP ~</span></span><br><span class="line">docker inspect [容器名|id]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;方式一：通过-pull-仓库镜像&quot;&gt;&lt;a href=&quot;#方式一：通过-pull-仓库镜像&quot; class=&quot;headerlink&quot; title=&quot;方式一：通过  pull 仓库镜像&quot;&gt;&lt;/a&gt;方式一：通过  pull 仓库镜像&lt;/h3&gt;&lt;h4 id=&quot;一、下载镜像&quot;
      
    
    </summary>
    
      <category term="docker" scheme="https://blog.milk4j.com/categories/docker/"/>
    
    
      <category term="docker" scheme="https://blog.milk4j.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>用Kotlin在IntelliJ Idea中无法生成 spring-configuration-metadata.json 文件</title>
    <link href="https://blog.milk4j.com/2018/09/05/%E7%94%A8Kotlin%E5%9C%A8IntelliJ-Idea%E4%B8%AD%E6%97%A0%E6%B3%95%E7%94%9F%E6%88%90-spring-configuration-metadata-json-%E6%96%87%E4%BB%B6/"/>
    <id>https://blog.milk4j.com/2018/09/05/用Kotlin在IntelliJ-Idea中无法生成-spring-configuration-metadata-json-文件/</id>
    <published>2018-09-05T11:12:09.000Z</published>
    <updated>2018-10-31T01:23:05.456Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用Kotlin在IntelliJ-Idea中无法生成-spring-configuration-metadata-json-文件"><a href="#用Kotlin在IntelliJ-Idea中无法生成-spring-configuration-metadata-json-文件" class="headerlink" title="用Kotlin在IntelliJ Idea中无法生成 spring-configuration-metadata.json 文件"></a>用Kotlin在IntelliJ Idea中无法生成 spring-configuration-metadata.json 文件</h1><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>在百度搜索关键词,搜索到了 Stack Overflow 有相关问题</p><blockquote><p>spring-configuration-metadata.json file is not generated in IntelliJ Idea for Kotlin @ConfigurationProperties class</p></blockquote><p>原文链接: </p><blockquote><p><a href="https://stackoverflow.com/questions/37858833/spring-configuration-metadata-json-file-is-not-generated-in-intellij-idea-for-ko" target="_blank" rel="noopener">https://stackoverflow.com/questions/37858833/spring-configuration-metadata-json-file-is-not-generated-in-intellij-idea-for-ko</a></p></blockquote><p>按照里面的方法试了一下,失败了,然后继续百度,在spring-boot的官方文档中找到了相关线索, 直达链接:</p><blockquote><p><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-kotlin.html#boot-features-kotlin-configuration-properties" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-kotlin.html#boot-features-kotlin-configuration-properties</a></p></blockquote><p>在spring官方文档中找到了kotlin的官方示例,链接地址:</p><blockquote><p><a href="https://kotlinlang.org/docs/reference/kapt.html#using-in-maven" target="_blank" rel="noopener">https://kotlinlang.org/docs/reference/kapt.html#using-in-maven</a></p></blockquote><p>下面是我参考上面的文档所得出来的可用方案</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="一、添加插件"><a href="#一、添加插件" class="headerlink" title="一、添加插件"></a>一、添加插件</h2><p>在<strong>pom</strong>文件中添加插件,没有写版本号是因为项目继承了<code>spring-boot-starter-parent</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">proc</span>&gt;</span>none<span class="tag">&lt;/<span class="name">proc</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Replacing default-compile as it is treated specially by maven --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>default-compile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">phase</span>&gt;</span>none<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Replacing default-testCompile as it is treated specially by maven --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>default-testCompile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">phase</span>&gt;</span>none<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>java-compile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goal</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>java-test-compile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">phase</span>&gt;</span>test-compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goal</span>&gt;</span>testCompile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">args</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arg</span>&gt;</span>-Xjsr305=strict<span class="tag">&lt;/<span class="name">arg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">args</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">compilerPlugins</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">compilerPlugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">jvmTarget</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">jvmTarget</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>kapt<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goal</span>&gt;</span>kapt<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">sourceDirs</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">sourceDir</span>&gt;</span>src/main/kotlin<span class="tag">&lt;/<span class="name">sourceDir</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">sourceDir</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">sourceDir</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">sourceDirs</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">annotationProcessorPaths</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- Specify your annotation processors here. --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">annotationProcessorPath</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">annotationProcessorPath</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">annotationProcessorPaths</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goal</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>test-compile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">phase</span>&gt;</span>test-compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goal</span>&gt;</span>test-compile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-maven-allopen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、使用插件生成"><a href="#二、使用插件生成" class="headerlink" title="二、使用插件生成"></a>二、使用插件生成</h2><p>我之前也是使用了同样的插件,但是始终生成不出来文件,直到看了kotlin官方文档我才发现有这么一句话</p><p><img src="https://oscimg.oschina.net/oscnet/32fe5bfc75b9a2618f9da47c91e0873bb16.jpg" alt="img"></p><p>文字的意思是: </p><p><strong>“请注意，kapt仍然不支持IntelliJ IDEA自己的构建系统。当你想要重新运行注释处理器时，可以从“Maven Projects”工具栏启动构建。”</strong></p><p><strong>很是坑爹啊,你也不标红也不加粗是想怎样啊</strong></p><p>好了,那就按照他说的做吧, 双击下面的插件按钮就可以生产<code>spring-configuration-metadata.json</code>文件了</p><p><img src="https://oscimg.oschina.net/oscnet/3622930814489ff201bd0db85aa89873930.jpg" alt="img"></p><p><strong>参考文档:</strong></p><blockquote><p><a href="https://stackoverflow.com/questions/37858833/spring-configuration-metadata-json-file-is-not-generated-in-intellij-idea-for-ko" target="_blank" rel="noopener">https://stackoverflow.com/questions/37858833/spring-configuration-metadata-json-file-is-not-generated-in-intellij-idea-for-ko</a></p><p><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-kotlin.html#boot-features-kotlin-configuration-properties" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-kotlin.html#boot-features-kotlin-configuration-properties</a></p><p>&lt;<a href="https://kotlinlang.org/docs/reference/kapt.html" target="_blank" rel="noopener">https://kotlinlang.org/docs/reference/kapt.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;用Kotlin在IntelliJ-Idea中无法生成-spring-configuration-metadata-json-文件&quot;&gt;&lt;a href=&quot;#用Kotlin在IntelliJ-Idea中无法生成-spring-configuration-metadata
      
    
    </summary>
    
      <category term="kotlin" scheme="https://blog.milk4j.com/categories/kotlin/"/>
    
    
      <category term="kotlin" scheme="https://blog.milk4j.com/tags/kotlin/"/>
    
      <category term="spring boot" scheme="https://blog.milk4j.com/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>Docker基本使用</title>
    <link href="https://blog.milk4j.com/2018/06/22/Docker%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.milk4j.com/2018/06/22/Docker基本使用/</id>
    <published>2018-06-22T03:26:02.000Z</published>
    <updated>2018-10-22T11:13:20.539Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-docker使用"><a href="#一-docker使用" class="headerlink" title="一. docker使用"></a>一. docker使用</h4><h5 id="1-docker-ps-查看运行中的容器"><a href="#1-docker-ps-查看运行中的容器" class="headerlink" title="1. docker ps 查看运行中的容器"></a>1. docker ps 查看运行中的容器</h5><h5 id="2-docker-images-查看docker镜像"><a href="#2-docker-images-查看docker镜像" class="headerlink" title="2. docker images 查看docker镜像"></a>2. docker images 查看docker镜像</h5><h5 id="3-docker-rm-id-容器id-删除容器（容器id可以通过docker-ps查看，容器必须停止后才能删除）"><a href="#3-docker-rm-id-容器id-删除容器（容器id可以通过docker-ps查看，容器必须停止后才能删除）" class="headerlink" title="3. docker rm id(容器id)  删除容器（容器id可以通过docker ps查看，容器必须停止后才能删除）"></a>3. docker rm id(容器id)  删除容器（容器id可以通过docker ps查看，容器必须停止后才能删除）</h5><h6 id="3-1-删除全部的容器-docker-rm-docker-ps-a-q"><a href="#3-1-删除全部的容器-docker-rm-docker-ps-a-q" class="headerlink" title="3.1 删除全部的容器 docker rm docker ps -a -q"></a>3.1 删除全部的容器 docker rm <code>docker ps -a -q</code></h6><h5 id="4-docker-stop-id-容器id-停止容器运行"><a href="#4-docker-stop-id-容器id-停止容器运行" class="headerlink" title="4. docker stop  id(容器id) 停止容器运行"></a>4. docker stop  id(容器id) 停止容器运行</h5><h5 id="5-docker-rmi-id-镜像id-删除镜像"><a href="#5-docker-rmi-id-镜像id-删除镜像" class="headerlink" title="5. docker rmi  id(镜像id) 删除镜像"></a>5. docker rmi  id(镜像id) 删除镜像</h5><h5 id="6-docker-pull-ubuntu-16-04-镜像名称-版本号-下载镜像"><a href="#6-docker-pull-ubuntu-16-04-镜像名称-版本号-下载镜像" class="headerlink" title="6. docker pull ubuntu:16.04(镜像名称:版本号) 下载镜像"></a>6. docker pull ubuntu:16.04(镜像名称:版本号) 下载镜像</h5><h5 id="7-docker-run-it-ubuntu-16-04-创建并运行容器容器"><a href="#7-docker-run-it-ubuntu-16-04-创建并运行容器容器" class="headerlink" title="7. docker run -it ubuntu:16.04 创建并运行容器容器"></a>7. docker run -it ubuntu:16.04 创建并运行容器容器</h5><p>　　　　-t 表示在新容器内指定一个伪终端或终端</p><p>　　　　-i 表示允许我们对容器内的 (STDIN) 进行交互</p><p>　　　　-p 指定映射端口</p><p>　　　　-d 在后台运行容器并打印容器ID</p><h6 id="7-1-docker-run-dit-ubuntu-16-04-创建并后台运行容器"><a href="#7-1-docker-run-dit-ubuntu-16-04-创建并后台运行容器" class="headerlink" title="7.1 docker run -dit ubuntu:16.04 创建并后台运行容器"></a>7.1 docker run -dit ubuntu:16.04 创建并后台运行容器</h6><h6 id="7-2-docker-run-ditp-8080-8080（主机端口-容器端口）-ubuntu-16-04-创建并后台运行容器且映射容器的端口"><a href="#7-2-docker-run-ditp-8080-8080（主机端口-容器端口）-ubuntu-16-04-创建并后台运行容器且映射容器的端口" class="headerlink" title="7.2 docker run -ditp 8080:8080（主机端口:容器端口） ubuntu:16.04 创建并后台运行容器且映射容器的端口"></a>7.2 docker run -ditp 8080:8080（主机端口:容器端口） ubuntu:16.04 创建并后台运行容器且映射容器的端口</h6><h5 id="8-docker-attach-id-容器id-进入正在运行中的容器环境"><a href="#8-docker-attach-id-容器id-进入正在运行中的容器环境" class="headerlink" title="8. docker attach id(容器id) 进入正在运行中的容器环境"></a>8. docker attach id(容器id) 进入正在运行中的容器环境</h5><h5 id="9-退出容器"><a href="#9-退出容器" class="headerlink" title="9. 退出容器"></a>9. 退出容器</h5><h6 id="9-1-exit-直接退出容器并终止容器运行"><a href="#9-1-exit-直接退出容器并终止容器运行" class="headerlink" title="9.1 exit 直接退出容器并终止容器运行"></a>9.1 exit 直接退出容器并终止容器运行</h6><h6 id="9-2-ctrl-p-ctrl-q-（快捷键）-退出容器，但是不会终止容器运行"><a href="#9-2-ctrl-p-ctrl-q-（快捷键）-退出容器，但是不会终止容器运行" class="headerlink" title="9.2 [ctrl+p]+[ctrl+q]（快捷键） 退出容器，但是不会终止容器运行"></a>9.2 [ctrl+p]+[ctrl+q]（快捷键） 退出容器，但是不会终止容器运行</h6><h5 id="10-docker-commit-m’版本标识’-id-容器id-ubuntu-16-04-镜像与版本号-提交镜像且生成镜像（可以通过该命令把搭建好的容器打包成一个新的镜像或者覆盖原镜像（即是修改原镜像内容，生成的镜像名与版本号相同就可以直接覆盖））"><a href="#10-docker-commit-m’版本标识’-id-容器id-ubuntu-16-04-镜像与版本号-提交镜像且生成镜像（可以通过该命令把搭建好的容器打包成一个新的镜像或者覆盖原镜像（即是修改原镜像内容，生成的镜像名与版本号相同就可以直接覆盖））" class="headerlink" title="10. docker commit -m’版本标识’ id(容器id) ubuntu:16.04(镜像与版本号)   提交镜像且生成镜像（可以通过该命令把搭建好的容器打包成一个新的镜像或者覆盖原镜像（即是修改原镜像内容，生成的镜像名与版本号相同就可以直接覆盖））"></a>10. docker commit -m’版本标识’ id(容器id) ubuntu:16.04(镜像与版本号)   提交镜像且生成镜像（可以通过该命令把搭建好的容器打包成一个新的镜像或者覆盖原镜像（即是修改原镜像内容，生成的镜像名与版本号相同就可以直接覆盖））</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一-docker使用&quot;&gt;&lt;a href=&quot;#一-docker使用&quot; class=&quot;headerlink&quot; title=&quot;一. docker使用&quot;&gt;&lt;/a&gt;一. docker使用&lt;/h4&gt;&lt;h5 id=&quot;1-docker-ps-查看运行中的容器&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="docker" scheme="https://blog.milk4j.com/categories/docker/"/>
    
    
      <category term="docker" scheme="https://blog.milk4j.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Mac后端开发环境搭建</title>
    <link href="https://blog.milk4j.com/2018/04/14/Mac%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://blog.milk4j.com/2018/04/14/Mac后端开发环境搭建/</id>
    <published>2018-04-14T02:01:56.000Z</published>
    <updated>2018-10-24T09:53:47.494Z</updated>
    
    <content type="html"><![CDATA[<p><code>作为一个开发人员，选择 Mac 是一个非常好的选择，首先 Mac 是 Unix 的内核，支持 Unix 内核的命令，使用 Mac 能帮助我们熟悉 Unix 的操作命令</code></p><h2 id="1、HomeBrew"><a href="#1、HomeBrew" class="headerlink" title="1、HomeBrew"></a>1、HomeBrew</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p><code>Homebrew是一款Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。</code></p><p><code>简单点说，Homebrew 是以最简单、最灵活的方式来安装苹果公司在 MacOS 中不包含的 UNIX 工具。</code></p><h3 id="1-2-安装与卸载"><a href="#1-2-安装与卸载" class="headerlink" title="1.2 安装与卸载"></a>1.2 安装与卸载</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>打开终端，复制粘贴，大约1分钟左右，下载完成，过程中需要输入密码，其他无需任何操作：</p><p><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></p><h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><p>有安装就要有卸载，打开终端，复制粘贴： </p><p><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)&quot;</code></p><p>其实只用把上面安装的install换成uninstall就行了。</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>Homebrew 常用命令，下面以安装 git 为例（使用 brew 安装默认安装软件包的最新版本）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">安装任意软件包：</span><br><span class="line">brew install git</span><br><span class="line">卸载已安装软件包：</span><br><span class="line">brew uninstall git</span><br><span class="line">搜索可用软件包：</span><br><span class="line">brew search git</span><br><span class="line">查看任意软件包信息：</span><br><span class="line">brew info git</span><br><span class="line">更新已安装的软件包：</span><br><span class="line">brew upgrade git</span><br><span class="line">查看所有已安装的软件包：</span><br><span class="line">brew list</span><br><span class="line">更新 Homebrew：</span><br><span class="line">brew update</span><br><span class="line">查看 HomeBrew 版本：</span><br><span class="line">brew -v</span><br><span class="line">HomeBrew 帮助信息：</span><br><span class="line">brew -h</span><br></pre></td></tr></table></figure><p>使用 <code>brew -h</code> 看下官方帮助：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> brew -h</span></span><br><span class="line">Example usage:</span><br><span class="line">  brew search [TEXT|/REGEX/]</span><br><span class="line">  brew info [FORMULA...]</span><br><span class="line">  brew install FORMULA...</span><br><span class="line">  brew update</span><br><span class="line">  brew upgrade [FORMULA...]</span><br><span class="line">  brew uninstall FORMULA...</span><br><span class="line">  brew list [FORMULA...]</span><br><span class="line"></span><br><span class="line">Troubleshooting:</span><br><span class="line">  brew config</span><br><span class="line">  brew doctor</span><br><span class="line">  brew install --verbose --debug FORMULA</span><br><span class="line"></span><br><span class="line">Contributing:</span><br><span class="line">  brew create [URL [--no-fetch]]</span><br><span class="line">  brew edit [FORMULA...]</span><br><span class="line"></span><br><span class="line">Further help:</span><br><span class="line">  brew commands</span><br><span class="line">  brew help [COMMAND]</span><br><span class="line">  man brew</span><br><span class="line">  https://docs.brew.sh</span><br></pre></td></tr></table></figure><h4 id="友情提示"><a href="#友情提示" class="headerlink" title="友情提示"></a>友情提示</h4><p>在<code>Mac OS X 10.11</code>系统以后，<code>/usr/local/</code>等系统目录下的文件读写是需要系统root权限的，以往的Homebrew安装如果没有指定安装路径，会默认安装在这些需要系统root用户读写权限的目录下，导致有些指令需要添加sudo前缀来执行，比如升级Homebrew需要：<code>sudo brew update</code></p><p><strong>推荐:</strong>   安装Homebrew时对安装路径进行指定，直接安装在不需要系统root用户授权就可以自由读写的目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby &lt;install path&gt; -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span><br></pre></td></tr></table></figure><p>下面是我的 HomeBrew 的版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> brew -v</span></span><br><span class="line">Homebrew 1.6.0</span><br><span class="line">Homebrew/homebrew-core (no git repository)</span><br></pre></td></tr></table></figure><p>默认安装的所有的命令都在<code>/usr/local/bin</code>目录下，安装文件都在<code>/usr/local/Cellar</code>下，对应的配置文件都在<code>/usr/local/etc</code>下</p><h3 id="1-3-Cakebrew"><a href="#1-3-Cakebrew" class="headerlink" title="1.3 Cakebrew"></a>1.3 Cakebrew</h3><p>Cakebrew 是 HomeBrew 的 GUI 版本，提供图形化的方式安装和管理软件包，安装方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install cakebrew</span><br></pre></td></tr></table></figure><h3 id="1-4-homebrew-cask"><a href="#1-4-homebrew-cask" class="headerlink" title="1.4  homebrew-cask"></a>1.4  homebrew-cask</h3><p>homebrew-cask安装常用软件，比在网上下载安装文件安装的优势在于：<br>（1）节省下载安装包的过程，一行命令即可安装<br>（2）一些在网上搜不到安装文件的软件也可以通过这种方法安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap phinze/homebrew-cask</span><br><span class="line">brew install brew-cask</span><br></pre></td></tr></table></figure><p>使用方法：将上面的brew换成brew cask即可，如</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install qq</span><br></pre></td></tr></table></figure><p>使用 brew cask 安装常用的软件：</p><p>brew cask 搜索地址 <a href="https://caskroom.github.io/search" target="_blank" rel="noopener">https://caskroom.github.io/search</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">brew cask install yy</span><br><span class="line">brew cask install qq</span><br><span class="line">brew cask install dash # 帮助文档</span><br><span class="line">brew cask install atom</span><br><span class="line">brew cask install sequel-pro # mysql可视化工具</span><br><span class="line">brew cask install sourcetree # git可视化工具</span><br><span class="line">brew cask install neteasemusic # 网易云音乐</span><br><span class="line">brew cask install android-file-transfer # android 传输工具</span><br><span class="line">brew cask install android-studio</span><br><span class="line">brew cask install intellij-idea</span><br><span class="line">brew cask install visual-studio-code</span><br><span class="line">brew cask install mockplus # 比较不错的画原型工具</span><br><span class="line">brew cask install alfred # 小红帽</span><br><span class="line">brew cask install the-unarchiver # 压缩工具</span><br><span class="line">brew cask install thunder # 迅雷</span><br><span class="line">brew cask install mplayerx # 播放器</span><br><span class="line">brew cask install iterm2 # mac上最好用的终端</span><br><span class="line">brew cask install cd-to # 当前目录在终端显示</span><br><span class="line">brew cask install duet # ipad做外接显示器</span><br><span class="line">brew cask install ckb # 海盗船机械键盘驱动</span><br><span class="line">brew cask install shadowsocksx # 翻墙工具</span><br><span class="line">brew cask install firefox # 火狐</span><br><span class="line">brew cask install foxmail # 邮箱客户端</span><br><span class="line">brew cask install rdm # redis 客户端</span><br><span class="line">brew cask install typora # markdown工具</span><br><span class="line">brew cask install macdown</span><br><span class="line">brew cask install cyberduck # ftp工具</span><br><span class="line">brew cask install bearychat</span><br></pre></td></tr></table></figure><h2 id="2、iTerm2"><a href="#2、iTerm2" class="headerlink" title="2、iTerm2"></a>2、iTerm2</h2><h3 id="2-1-简介"><a href="#2-1-简介" class="headerlink" title="2.1 简介"></a>2.1 简介</h3><p>ITERM2 是 MAC 下最好的终端工具。直接去<a href="https://www.iterm2.com/" target="_blank" rel="noopener">官网</a>下载安装包安装即可使用。</p><h3 id="2-2-iTerm2-常用快捷键"><a href="#2-2-iTerm2-常用快捷键" class="headerlink" title="2.2  iTerm2 常用快捷键"></a>2.2  iTerm2 常用快捷键</h3><ul><li>切换 tab：⌘+← ，⌘+→  ，⌘+{  ， ⌘+} ，⌘+数字直接定位到该 tab</li><li>新建 tab：⌘+t</li><li>顺序切换 pane：⌘+[  ， ⌘+]</li><li>按方向切换 pane：⌘+Option+方向键</li><li>切分屏幕：⌘+d 水平切分，⌘+Shift+d 垂直切分</li><li>智能查找，支持正则查找：⌘+f</li></ul><h2 id="3、安装OH-MY-ZSH"><a href="#3、安装OH-MY-ZSH" class="headerlink" title="3、安装OH MY ZSH"></a>3、安装OH MY ZSH</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>ZSH 是一种Shell指令集，Mac 自带 ZSH 的安装。但 Oh my zsh 可以让你能更简便的配置 ZSH。 安装方式如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure><p>等待安装完成即可</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>设置 zsh 为系统的默认的 shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure><h3 id="更改zsh主题"><a href="#更改zsh主题" class="headerlink" title="更改zsh主题"></a>更改zsh主题</h3><p>编辑 <code>~/.zshrc</code> ，将文本中的 ZSH_THEME 修改为如下（个人推荐主题：ys）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME="ys"</span><br></pre></td></tr></table></figure><p>注：主题文件在 <code>~/.oh-my-zsh/themes</code> 目录</p><h2 id="4、安装JDK"><a href="#4、安装JDK" class="headerlink" title="4、安装JDK"></a>4、安装JDK</h2><h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><p>通过 HomeBrew 安装 JDK</p><p>安装 jdk8 <code>brew cask info java8</code></p><p>安装 jdk9 <code>brew cask info java9</code></p><p><em>也可以通过<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">官网</a>下载安装包安装</em></p><p>上述两个文件安装完成后，执行下述命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo "alias setJdk9='export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk9.0.4.jdk/Contents/Home'" &gt;&gt; ~/.zshrc</span><br><span class="line">echo "alias setJdk8='export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home'" &gt;&gt; ~/.zshrc</span><br><span class="line">echo "export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home"  &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><p>这样在命令行中默认设置当前环境变量为 <strong>JAVA 8</strong> , 当我们需要切换到 <strong>JAVA 9</strong> 时只需在命令行中执行命令 <strong>setJdk9</strong> 即可 。</p><h2 id="5、安装-Maven"><a href="#5、安装-Maven" class="headerlink" title="5、安装 Maven"></a>5、安装 Maven</h2><h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><p>Maven 是Java生态中用来构建项目的工具。通过brew安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install maven</span><br></pre></td></tr></table></figure><p>等待安装完成后即可</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>在命令行中输入下述命令验证MAVEN是否正确安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mvn -v</span></span><br><span class="line">Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-25T03:49:05+08:00)</span><br><span class="line">Maven home: /usr/local/Cellar/maven/3.5.3/libexec</span><br><span class="line">Java version: 1.8.0_161, vendor: Oracle Corporation</span><br><span class="line">Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre</span><br><span class="line">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class="line">OS name: "mac os x", version: "10.13.4", arch: "x86_64", family: "mac"</span><br></pre></td></tr></table></figure><p>如果有以上输出内容即标识安装完成</p><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><p>在 ~/.m2 目录下创建 settings.xml 文件，使用阿里云的 maven 仓库，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span><br><span class="line">          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">          xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;pluginGroups&gt;&lt;/pluginGroups&gt;</span><br><span class="line">    &lt;proxies&gt;&lt;/proxies&gt;</span><br><span class="line">    &lt;servers&gt;&lt;/servers&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;mirrors&gt;</span><br><span class="line">        &lt;mirror&gt;</span><br><span class="line">            &lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class="line">            &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line">            &lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class="line">        &lt;/mirror&gt;</span><br><span class="line">    &lt;/mirrors&gt;</span><br><span class="line"></span><br><span class="line">    &lt;profiles&gt;</span><br><span class="line">        &lt;profile&gt;</span><br><span class="line">            &lt;id&gt;JDK-1.8&lt;/id&gt;</span><br><span class="line">            &lt;activation&gt;</span><br><span class="line">                &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">                &lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class="line">            &lt;/activation&gt;</span><br><span class="line">            &lt;properties&gt;</span><br><span class="line">                &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class="line">                &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class="line">                &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class="line">            &lt;/properties&gt;</span><br><span class="line">        &lt;/profile&gt;</span><br><span class="line">    &lt;/profiles&gt;</span><br><span class="line"></span><br><span class="line">    &lt;activeProfiles&gt;</span><br><span class="line">        &lt;activeProfile&gt;JDK-1.8&lt;/activeProfile&gt;</span><br><span class="line">    &lt;/activeProfiles&gt;</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure><h2 id="6、安装-Redis"><a href="#6、安装-Redis" class="headerlink" title="6、安装 Redis"></a>6、安装 Redis</h2><p>Redis 是一款基于数据结构的内存数据库。在我们的项目中被用作高速集中式缓存的解决方案。</p><h3 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install redis</span><br></pre></td></tr></table></figure><p>等待安装完成即可</p><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><p>在命令行中输入下述命令查看 reids 版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server -v                                                                                                                                                                        </span><br><span class="line">Redis server v=2.8.3 sha=00000000:0 malloc=libc bits=64 build=e836d8ad888e21a1</span><br></pre></td></tr></table></figure><p>如果有以上输出内容即表示安装完成</p><h2 id="7、安装MySQL"><a href="#7、安装MySQL" class="headerlink" title="7、安装MySQL"></a>7、安装MySQL</h2><p>Mysql 是业界主流的开源关系型数据库。在我们项目中用以持久化用户及系统数据。</p><h3 id="安装-5"><a href="#安装-5" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install mysql</span><br></pre></td></tr></table></figure><p>等待安装完成即可</p><h3 id="验证-2"><a href="#验证-2" class="headerlink" title="验证"></a>验证</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -V</span><br><span class="line">mysql  Ver 14.14 Distrib 5.6.15, for osx10.9 (x86_64) using  EditLine wrapper</span><br></pre></td></tr></table></figure><p>如果有以上输出内容即表示安装完成</p><h2 id="8、安装-ElasticSearch"><a href="#8、安装-ElasticSearch" class="headerlink" title="8、安装 ElasticSearch"></a>8、安装 ElasticSearch</h2><h3 id="安装-6"><a href="#安装-6" class="headerlink" title="安装"></a>安装</h3><p>Elasticsearch(简称ES）是一款基于lucene的全文搜索中间件。用于处理在大量文本中通过关键字搜索的场景（例如搜索商品、店铺等）。先在下面的链接中下载安装包（已集成相关插件）后解压, 将解压后的文件夹放到你想安装的目录。通过 brew 安装5.6版的 ES： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install elasticsearch@5.6</span><br></pre></td></tr></table></figure><h3 id="验证-3"><a href="#验证-3" class="headerlink" title="验证"></a>验证</h3><p>打开Iterm2，进入 elasticsearch的安装目录，执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./elasticsearch</span><br></pre></td></tr></table></figure><p>就可以看到启动日志了</p><h2 id="9、安装Nginx"><a href="#9、安装Nginx" class="headerlink" title="9、安装Nginx"></a>9、安装Nginx</h2><h3 id="安装-7"><a href="#安装-7" class="headerlink" title="安装"></a>安装</h3><p>Nginx 是一款轻量的高性能的Http与反向代理服务器。可被用作转发页面的请求至后台的Tomcat服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nginx</span><br></pre></td></tr></table></figure><p>等待安装完成即可</p><h3 id="验证-4"><a href="#验证-4" class="headerlink" title="验证"></a>验证</h3><p>在命令行中输入下述命令验证 <strong>Nginx</strong> 是否正确安装 (版本可能有所不同)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ nginx -V</span><br><span class="line">nginx version: nginx/1.6.3</span><br><span class="line">built by clang 6.1.0 (clang-602.0.49) (based on LLVM 3.6.0svn)</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/local/Cellar/nginx/1.6.3 --with-http_ssl_module --with-pcre --with-ipv6 --sbin-path=/usr/local/Cellar/nginx/1.6.3/bin/nginx --with-cc-opt=&apos;-I/usr/local/Cellar/pcre/8.36/include -I/usr/local/Cellar/openssl/1.0.2a-1/include&apos; --with-ld-opt=&apos;-L/usr/local/Cellar/pcre/8.36/lib -L/usr/local/Cellar/openssl/1.0.2a-1/lib&apos; --conf-path=/usr/local/etc/nginx/nginx.conf --pid-path=/usr/local/var/run/nginx.pid --lock-path=/usr/local/var/run/nginx.lock --http-client-body-temp-path=/usr/local/var/run/nginx/client_body_temp --http-proxy-temp-path=/usr/local/var/run/nginx/proxy_temp --http-fastcgi-temp-path=/usr/local/var/run/nginx/fastcgi_temp --http-uwsgi-temp-path=/usr/local/var/run/nginx/uwsgi_temp --http-scgi-temp-path=/usr/local/var/run/nginx/scgi_temp --http-log-path=/usr/local/var/log/nginx/access.log --error-log-path=/usr/local/var/log/nginx/error.log --with-http_gzip_static_module</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">worker_processes  2;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    gzip  on;</span><br><span class="line">    include servers/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10、安装-SEQUEL-PRO"><a href="#10、安装-SEQUEL-PRO" class="headerlink" title="10、安装 SEQUEL PRO"></a>10、安装 SEQUEL PRO</h2><p>Sequel Pro 是一款免费的  MySQL 的图形管理工具。</p><h3 id="安装-8"><a href="#安装-8" class="headerlink" title="安装"></a>安装</h3><p>在<a href="http://www.sequelpro.com/" target="_blank" rel="noopener">官网</a>可下载最新版本</p><h2 id="11、安装-IntelliJ-IDEA"><a href="#11、安装-IntelliJ-IDEA" class="headerlink" title="11、安装 IntelliJ IDEA"></a>11、安装 IntelliJ IDEA</h2><p>IntelliJ IDEA 业界公认为最好的 Java 开发工具之一</p><h3 id="安装-9"><a href="#安装-9" class="headerlink" title="安装"></a>安装</h3><p>【<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">官网</a>】，网上有很多破解方法，如果资金允许请支持正版</p><h2 id="12、安装-Zookeeper"><a href="#12、安装-Zookeeper" class="headerlink" title="12、安装 Zookeeper"></a>12、安装 Zookeeper</h2><h3 id="安装-10"><a href="#安装-10" class="headerlink" title="安装"></a>安装</h3><p>通过 brew 安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install zookeeper</span><br></pre></td></tr></table></figure><h2 id="13、LaunchRocket"><a href="#13、LaunchRocket" class="headerlink" title="13、LaunchRocket"></a>13、LaunchRocket</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>是一个帮助管理Homebrew安装的服务的软件，比如你使用brew安装的Mysql、Redis、MongoDB，LaunchRocket 可以管理这些服务的生命周期和启动方式（自启动、手动启动），传统方式需要使用命令行的命令，而使用LaunchRocket则可以在图形界面中进行管理。</p><h3 id="安装-11"><a href="#安装-11" class="headerlink" title="安装"></a>安装</h3><p>brew 安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install launchrocket</span><br></pre></td></tr></table></figure><h2 id="14、一些其他实用软件"><a href="#14、一些其他实用软件" class="headerlink" title="14、一些其他实用软件"></a>14、一些其他实用软件</h2><h3 id="办公："><a href="#办公：" class="headerlink" title="办公："></a>办公：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">markdown 编辑器：BoostNote、Typora、YuWriter、Mou</span><br><span class="line">文本编辑工具：Atom、Visual Studio Code、Sublime</span><br><span class="line">时间/项目管理工具：2Do、OmniPlan、OmniForce</span><br><span class="line">流程图绘制：OmniGraffle</span><br><span class="line">脑图绘制：Xmind、MindNode、iThoughtsX</span><br><span class="line">文稿编辑/演示： KeyNote、Pages、Scrivener、Quiver</span><br><span class="line">状态栏图标隐藏工具：Bartender3</span><br><span class="line">压缩工具：Dr.Unarchiver</span><br><span class="line">技术文档离线阅读：Dash</span><br><span class="line">效率搜索：Alfred3</span><br><span class="line">数据库管理工具：Sequel Pro、Navicat、TablePlus</span><br><span class="line">Git 的 GUI 工具：SourceTree、GitUp</span><br><span class="line">REST 客户端：Postman、Paw</span><br><span class="line">Hosts 切换管理工具：SwitchHosts</span><br></pre></td></tr></table></figure><h3 id="上班必备"><a href="#上班必备" class="headerlink" title="上班必备"></a>上班必备</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">社交软件：微信、QQ、钉钉</span><br><span class="line">上班听音乐：网易云音乐、酷我音乐、QQ音乐</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;作为一个开发人员，选择 Mac 是一个非常好的选择，首先 Mac 是 Unix 的内核，支持 Unix 内核的命令，使用 Mac 能帮助我们熟悉 Unix 的操作命令&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;1、HomeBrew&quot;&gt;&lt;a href=&quot;#1、Home
      
    
    </summary>
    
      <category term="mac" scheme="https://blog.milk4j.com/categories/mac/"/>
    
    
      <category term="mac" scheme="https://blog.milk4j.com/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Hexo基本使用</title>
    <link href="https://blog.milk4j.com/2015/04/21/Hexo%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.milk4j.com/2015/04/21/Hexo基本使用/</id>
    <published>2015-04-21T15:20:36.000Z</published>
    <updated>2018-10-22T02:18:04.969Z</updated>
    
    <content type="html"><![CDATA[<p>官网 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>| 文档 <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> | 社区 <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> | Git地址 <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>详细说明: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>详细说明: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>详细说明: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="发布到远程站点"><a href="#发布到远程站点" class="headerlink" title="发布到远程站点"></a>发布到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>详细说明: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;官网 &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;| 文档 &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
      
    
    </summary>
    
      <category term="hexo" scheme="https://blog.milk4j.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.milk4j.com/tags/hexo/"/>
    
  </entry>
  
</feed>
